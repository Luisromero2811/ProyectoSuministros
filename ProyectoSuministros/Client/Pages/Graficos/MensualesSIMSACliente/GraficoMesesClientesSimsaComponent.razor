@page "/comprasMensuales"
@inject IJSRuntime js
@inject IRepositorio http
@implements IDisposable
@inject SweetAlertService Swal

<h3>Compras mensuales Clientes y SIMSA 2024</h3>

<canvas id="myChartSIMSACliente" style="width:100%; height: 600px;"></canvas>

@code {
    private DotNetObjectReference<GraficoMesesClientesSimsaComponent> objRef;
    private List<ComprasMensuales> compras_ = new();

    protected override async Task OnInitializedAsync()
    {
        await Data();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            objRef = DotNetObjectReference.Create(this);
            await Data();

            await js.InvokeVoidAsync("initializeChartMesesClientesSimsa", compras_.Select(x => x.Mes), compras_.Select(x => x.Volumen));
        }
    }

    public void Dispose()
    {
        objRef?.Dispose();
    }

    private async Task Data()
    {
        try
        {
            var responseHttp = await http.Get<List<ComprasMensuales>>("api/compras/MensualClienteSimsa");
            if (!responseHttp.Error)
            {
                Console.WriteLine("Inicio", responseHttp);
                compras_ = responseHttp.Response;
            }
        }
        catch (Exception e)
        {
            await Swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private record ComprasMensuales(string Mes, double? Volumen);

}


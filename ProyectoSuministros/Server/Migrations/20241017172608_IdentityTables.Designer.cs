// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoSuministros.Server;

#nullable disable

namespace ProyectoSuministros.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241017172608_IdentityTables")]
    partial class IdentityTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProyectoSuministros.Server.Identity.IdentityUsuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UserCod")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Cliente", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("IDGrupo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.HasIndex("IDGrupo");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Cluster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Cluster");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Destinos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CRE")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("CodRs")
                        .HasColumnType("int");

                    b.Property<string>("Estacion")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("IDCluster")
                        .HasColumnType("int");

                    b.Property<int?>("IDEjecutivo")
                        .HasColumnType("int");

                    b.Property<int?>("IDFranquicia")
                        .HasColumnType("int");

                    b.Property<int>("IDGob")
                        .HasColumnType("int");

                    b.Property<int?>("IDReparto")
                        .HasColumnType("int");

                    b.Property<int?>("IDTad")
                        .HasColumnType("int");

                    b.Property<int?>("IDZona")
                        .HasColumnType("int");

                    b.Property<string>("NEstacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomMS")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NumMGC")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RFC")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.HasIndex("CodRs");

                    b.HasIndex("IDCluster");

                    b.HasIndex("IDEjecutivo");

                    b.HasIndex("IDFranquicia");

                    b.HasIndex("IDReparto");

                    b.HasIndex("IDTad");

                    b.HasIndex("IDZona");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Ejecutivo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.HasKey("ID");

                    b.ToTable("Ejecutivo");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Estado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ID");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Factura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Codest")
                        .HasColumnType("int");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("Fch_Ven")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDDestino")
                        .HasColumnType("int");

                    b.Property<int>("IDProd")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NFac")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<string>("NRem")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<string>("TipDOC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Unidades")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("VolFac")
                        .HasColumnType("float");

                    b.Property<double>("VolNat")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("Codest");

                    b.HasIndex("IDDestino");

                    b.HasIndex("IDProd");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Franquicia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Franquicia");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Grupo", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Producto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.RazonSocial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("IDCte")
                        .HasColumnType("int");

                    b.Property<int?>("IDGrupo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ID");

                    b.HasIndex("IDCte");

                    b.HasIndex("IDGrupo");

                    b.ToTable("Razonsocial");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Reparto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Reparto");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.TAD", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("IDGob")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("TAD");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Usuario", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Cve")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Den")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usu")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Cod");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Zona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProyectoSuministros.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProyectoSuministros.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSuministros.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProyectoSuministros.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Cliente", b =>
                {
                    b.HasOne("ProyectoSuministros.Shared.Modelos.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IDGrupo");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Destinos", b =>
                {
                    b.HasOne("ProyectoSuministros.Shared.Modelos.RazonSocial", "RazonSocial")
                        .WithMany()
                        .HasForeignKey("CodRs");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Cluster", "Cluster")
                        .WithMany("Destinos")
                        .HasForeignKey("IDCluster");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Ejecutivo", "Ejecutivo")
                        .WithMany("Destinos")
                        .HasForeignKey("IDEjecutivo");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Franquicia", "Franquicia")
                        .WithMany("Destinos")
                        .HasForeignKey("IDFranquicia");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Reparto", "Reparto")
                        .WithMany("Destinos")
                        .HasForeignKey("IDReparto");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.TAD", "TAD")
                        .WithMany("Destinos")
                        .HasForeignKey("IDTad");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Zona", "Zona")
                        .WithMany("Destinos")
                        .HasForeignKey("IDZona");

                    b.Navigation("Cluster");

                    b.Navigation("Ejecutivo");

                    b.Navigation("Franquicia");

                    b.Navigation("RazonSocial");

                    b.Navigation("Reparto");

                    b.Navigation("TAD");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Factura", b =>
                {
                    b.HasOne("ProyectoSuministros.Shared.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Codest");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("IDDestino")
                        .HasPrincipalKey("IDGob")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IDProd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinos");

                    b.Navigation("Estado");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.RazonSocial", b =>
                {
                    b.HasOne("ProyectoSuministros.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IDCte");

                    b.HasOne("ProyectoSuministros.Shared.Modelos.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IDGrupo");

                    b.Navigation("Cliente");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Cluster", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Ejecutivo", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Franquicia", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Reparto", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.TAD", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ProyectoSuministros.Shared.Modelos.Zona", b =>
                {
                    b.Navigation("Destinos");
                });
#pragma warning restore 612, 618
        }
    }
}
